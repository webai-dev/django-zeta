# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ery_backend.scripts.grpc.babel_pb2 as babel__pb2


class BabelStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ConvertBundle = channel.unary_unary(
        '/babel.Babel/ConvertBundle',
        request_serializer=babel__pb2.ES6CodeBundle.SerializeToString,
        response_deserializer=babel__pb2.ES5Code.FromString,
        )
    self.ConvertCodeSplitBundle = channel.unary_unary(
        '/babel.Babel/ConvertCodeSplitBundle',
        request_serializer=babel__pb2.ES6CodeBundle.SerializeToString,
        response_deserializer=babel__pb2.ES5CodeBundle.FromString,
        )
    self.Convert = channel.unary_unary(
        '/babel.Babel/Convert',
        request_serializer=babel__pb2.ES6Code.SerializeToString,
        response_deserializer=babel__pb2.ES5Code.FromString,
        )


class BabelServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ConvertBundle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ConvertCodeSplitBundle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Convert(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BabelServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ConvertBundle': grpc.unary_unary_rpc_method_handler(
          servicer.ConvertBundle,
          request_deserializer=babel__pb2.ES6CodeBundle.FromString,
          response_serializer=babel__pb2.ES5Code.SerializeToString,
      ),
      'ConvertCodeSplitBundle': grpc.unary_unary_rpc_method_handler(
          servicer.ConvertCodeSplitBundle,
          request_deserializer=babel__pb2.ES6CodeBundle.FromString,
          response_serializer=babel__pb2.ES5CodeBundle.SerializeToString,
      ),
      'Convert': grpc.unary_unary_rpc_method_handler(
          servicer.Convert,
          request_deserializer=babel__pb2.ES6Code.FromString,
          response_serializer=babel__pb2.ES5Code.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'babel.Babel', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
